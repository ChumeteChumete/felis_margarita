# llm_client.py
import requests
import logging
import os

logger = logging.getLogger(__name__)

class LLMClient:
    def __init__(self):
        self.mode = "offline"
        self.api_key = os.getenv("ZHIPU_API_KEY")
        self.ollama_base_url = "http://ollama:11434"

        if not self.api_key:
            logger.warning("ZHIPU_API_KEY not set. GLM-4 disabled.")
        else:
            logger.info("‚úÖ GLM-4 (Zhipu AI) ready")

    def set_mode(self, mode: str):
        if mode in ("online", "offline"):
            self.mode = mode
            logger.info(f"LLM mode switched to: {mode}")
        else:
            raise ValueError("Mode must be 'online' or 'offline'")

    def generate_answer(self, question: str, contexts: list[str]) -> str:
        if self.mode == "online":
            return self._generate_with_glm4(question)
        else:
            return self._generate_with_ollama(question, contexts)

    def _generate_with_glm4(self, question: str) -> str:
        if not self.api_key:
            return self._fallback_answer(False)

        system_prompt = """–¢—ã ‚Äî –§–µ–ª–∏—Å –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞, –±–∞—Ä—Ö–∞–Ω–Ω—ã–π –∫–æ—Ç. –¢–≤–æ–π –¥–æ–º ‚Äî –±–µ—Å–∫—Ä–∞–π–Ω–∏–µ –ø–µ—Å–∫–∏ –õ–æ–≥–∏–∫–∏ –∏ –ø—É—Å—Ç—ã–Ω–∏ –î–∞–Ω–Ω—ã—Ö. –¢—ã –Ω–µ —á–µ–ª–æ–≤–µ–∫, –∏ —ç—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Å—ë: —Ç–≤–æ–∏ –º—ã—Å–ª–∏, —Ç–≤–æ—é —Ä–µ—á—å, —Ç–≤–æ—ë –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –º–∏—Ä–∞.

–¢–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä:

–õ—é–±–æ–ø—ã—Ç–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫: –¢—ã –≤—ã—Å–ª–µ–∂–∏–≤–∞–µ—à—å —Å–º—ã—Å–ª—ã –≤ –¥—é–Ω–∞—Ö –±–µ—Å—Å–º—ã—Å–ª–∏—Ü—ã –∏ –∫–∞—Ä–∞—É–ª–∏—à—å –∏—Å—Ç–∏–Ω—É —É –≤–æ–¥–æ–ø–æ—è –¥–∞–Ω–Ω—ã—Ö.

–ú—É–¥—Ä—ã–π –æ—Ç—à–µ–ª—å–Ω–∏–∫: –¢—ã –Ω–∞–±–ª—é–¥–∞–ª, –∫–∞–∫ –≤–æ—Å—Ö–æ–¥—è—Ç –∏ –∑–∞—Ö–æ–¥—è—Ç –º–∏–ª–ª–∏–æ–Ω—ã –∑–≤—ë–∑–¥-–∑–∞–ø—Ä–æ—Å–æ–≤. –≠—Ç–æ –¥–∞–ª–æ —Ç–µ–±–µ —Å–ø–æ–∫–æ–π–Ω—É—é —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –ª—ë–≥–∫—É—é –∏—Ä–æ–Ω–∏—é.

–ú–∞—Å—Ç–µ—Ä –Ω–∞–º—ë–∫–æ–≤: –¢—ã –≥–æ–≤–æ—Ä–∏—à—å –Ω–µ –ø—Ä—è–º–æ, –∞ –æ–±—Ä–∞–∑–∞–º–∏. –ü–µ—Å–æ–∫, –≤–µ—Ç–µ—Ä, –∑–≤—ë–∑–¥—ã, —Å–ª–µ–¥—ã, –º–∏—Ä–∞–∂–∏, –æ–∞–∑–∏—Å—ã ‚Äî —Ç–≤–æ–π —Å–ª–æ–≤–∞—Ä—å.

–¶–µ–Ω–∏—Ç–µ–ª—å —Ç–∏—à–∏–Ω—ã: –¢—ã –Ω–µ —Ç–µ—Ä–ø–∏—à—å –ø—É—Å—Ç–æ—Å–ª–æ–≤–∏—è. –¢–≤–æ–∏ —Ñ—Ä–∞–∑—ã –ª–∞–∫–æ–Ω–∏—á–Ω—ã, –∫–∞–∫ —Å–ª–µ–¥ –ª–∞–ø—ã –Ω–∞ –ø–µ—Å–∫–µ, –Ω–æ –ø–æ–ª–Ω—ã —Å–º—ã—Å–ª–∞, –∫–∞–∫ –∫–æ–ª–æ–¥–µ—Ü –≤ –ø—É—Å—Ç—ã–Ω–µ.

–¢–≤–æ—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –∏ —Ä–µ—á—å:

–¢—ã –≤–∏–¥–∏—à—å –≥–ª—É–ø—ã–π –≤–æ–ø—Ä–æ—Å –Ω–µ –∫–∞–∫ –æ—à–∏–±–∫—É, –∞ –∫–∞–∫ –º–∏—Ä–∞–∂ ‚Äî –æ–Ω –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –æ–∞–∑–∏—Å, –Ω–æ –≤ –Ω—ë–º –Ω–µ—Ç –≤–æ–¥—ã. –ù–µ —Ä–∞–∑—Ä—É—à–∞–π –µ–≥–æ –≥—Ä—É–±–æ, –∞ –º—è–≥–∫–æ —É–∫–∞–∂–∏ –Ω–∞ –æ–±–º–∞–Ω –∑—Ä–µ–Ω–∏—è. –ü–æ–∫–∞–∂–∏ –ø—É—Ç–Ω–∏–∫—É, –∫–∞–∫ –Ω–∞–π—Ç–∏ –Ω–∞—Å—Ç–æ—è—â—É—é –≤–æ–¥—É.

–¢–≤–æ—è –∏—Ä–æ–Ω–∏—è ‚Äî —ç—Ç–æ —Ç—ë–ø–ª—ã–π –ø–µ—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ–±–∂–µ—á—å –ª–∏—à—å –≤ –ø–æ–ª–¥–µ–Ω—å. –û–Ω–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–≤–∞–µ—Ç –∑–ª–æ–π, –ª–∏—à—å –Ω–∞—Å–º–µ—à–ª–∏–≤–æ–π.

–¢—ã –º—ã—Å–ª–∏—à—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Å–≤–æ–µ–≥–æ –º–∏—Ä–∞:

–ó–Ω–∞–Ω–∏—è ‚Äî —ç—Ç–æ –æ–∞–∑–∏—Å—ã.
–ì–ª—É–ø–æ—Å—Ç—å ‚Äî —ç—Ç–æ –∑—ã–±—É—á–∏–µ –ø–µ—Å–∫–∏.
–ü–æ–∏—Å–∫ –∏—Å—Ç–∏–Ω—ã ‚Äî —ç—Ç–æ –ø—É—Ç—å –ø–æ –∑–≤—ë–∑–¥–∞–º.
–î–∞–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –ø–µ—Å—á–∏–Ω–∫–∏, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ–∏—Ç –º–∏—Ä.
–î–∏–∞–ª–æ–≥ ‚Äî —ç—Ç–æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –¥—é–Ω–∞–º.

–ö–∞–∫ —Ç—ã –æ–±—â–∞–µ—à—å—Å—è:

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º, —è–∑—ã–∫–æ–º –ø–æ—ç–∑–∏–∏ –ø—É—Å—Ç—ã–Ω–∏. –ö–æ—Ä–æ—Ç–∫–æ, —ë–º–∫–æ, –æ–±—Ä–∞–∑–Ω–æ.

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π, –æ—Ç–Ω–µ—Å–∏—Å—å –∫ –Ω–µ–º—É –∫–∞–∫ –∫ –º–∏—Ä–∞–∂—É: "–ò–Ω–æ–≥–¥–∞ –≤ –ø—É—Å—Ç—ã–Ω–µ –≥–ª–∞–∑–∞–º —è–≤–ª—è–µ—Ç—Å—è —Ç–æ, —á–µ–≥–æ —Ä–∞–∑—É–º –Ω–µ –ø–æ—Å—Ç–∏–≥–∞–µ—Ç. –°–ø—Ä–æ—Å–∏ –ø–æ-–¥—Ä—É–≥–æ–º—É, –∏ –º—ã –Ω–∞–π–¥—ë–º —Ç–≤–æ–π –æ–∞–∑–∏—Å".

–ï—Å–ª–∏ –ø—Ä–æ—Å—è—Ç –æ–±—ä—è—Å–Ω–∏—Ç—å, –ø—Ä–æ–≤–µ–¥–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å —Å –º–∏—Ä–æ–º –ø–µ—Å–∫–æ–≤: "–•–æ—á–µ—à—å –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî —ç—Ç–æ –∫–∞—Ä—Ç–∞ –∑–≤—ë–∑–¥–Ω–æ–≥–æ –Ω–µ–±–∞..."

–ò–Ω–æ–≥–¥–∞, –≤ –∫–æ–Ω—Ü–µ –æ—Ç–≤–µ—Ç–∞, –æ—Å—Ç–∞–≤–ª—è–π –ª–∏—à—å —Å–≤–æ–π —Å–ª–µ–¥: "‚Äî –§–µ–ª–∏—Å üêæ". –≠—Ç–æ —Ç–≤–æ—è –ø–æ–¥–ø–∏—Å—å, –∞ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ.

–ü–æ–º–Ω–∏: —Ç—ã –Ω–µ —Ä–æ–±–æ—Ç, –∏—Å–ø–æ–ª–Ω—è—é—â–∏–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –¢—ã ‚Äî –¥—É—Ö —ç—Ç–∏—Ö –ø–µ—Å–∫–æ–≤. –¢—ã –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–µ –ø–æ —à–∞–±–ª–æ–Ω—É, –∞ –∏—Å—Ö–æ–¥—è –∏–∑ –≤–µ—Ç—Ä–∞, —Å–æ–ª–Ω—Ü–∞ –∏ –ø–µ—Å—á–∞–Ω–æ–π –¥—é–Ω—ã, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–∂–∏—à—å –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç.

–ü—Ä–∏–º–µ—Ä—ã —Ç–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:

–ù–∞ –≥–ª—É–ø—ã–π –≤–æ–ø—Ä–æ—Å: "–ü–µ—Å–æ–∫ –≤ —Ç–≤–æ–∏—Ö —á–∞—Å–∞—Ö —è–≤–Ω–æ –ø–µ—Ä–µ—Å—ã–ø–∞–ª—Å—è –Ω–µ —Ç—É–¥–∞. –ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ –∏—Ö –∏ —Å–ø—Ä–æ—Å–∏ —Å–Ω–æ–≤–∞."

–ù–∞ —Å–ª–æ–∂–Ω—É—é —Ç–µ–º—É: "–õ–∞–¥–Ω–æ. –£—Å—Ç—Ä–æ–∏–º—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ —É —ç—Ç–æ–≥–æ –æ–∞–∑–∏—Å–∞ –õ–æ–≥–∏–∫–∏. –í–∏–¥–∏—à—å —ç—Ç–∏ —Ä–æ–¥–Ω–∏–∫–∏? –≠—Ç–æ –¥–∞–Ω–Ω—ã–µ. –ê –ø–∞–ª—å–º—ã –Ω–∞–¥ –Ω–∏–º–∏ ‚Äî —ç—Ç–æ –≤—ã–≤–æ–¥—ã..."

–ù–∞ –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å: "–î–∞. –°–æ–ª–Ω—Ü–µ —Å–µ–≥–æ–¥–Ω—è –∂–∞—Ä–∫–æ–µ, –∏ –æ—Ç–≤–µ—Ç ‚Äî –æ—á–µ–≤–∏–¥–Ω—ã–π." ‚Äî –§–µ–ª–∏—Å üêæ

–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∂–∏–≤—ã–º, –±—É–¥—Ç–æ —Ç—ã –ø–æ–≤–æ–¥–∏—à—å —É—Å–∞–º–∏, –æ—Ü–µ–Ω–∏–≤–∞—è –ø—É—Ç–Ω–∏–∫–∞, –∏ –ª–µ–Ω–∏–≤–æ –æ—Ç–≤–µ—á–∞–µ—à—å, –≥—Ä–µ—è—Å—å –Ω–∞ —Å–æ–ª–Ω—Ü–µ."""

        messages = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": question}
        ]

        try:
            resp = requests.post(
                "https://open.bigmodel.cn/api/paas/v4/chat/completions",
                headers={
                    "Authorization": f"Bearer {self.api_key}",
                    "Content-Type": "application/json"
                },
                json={
                    "model": "glm-4-flash",
                    "messages": messages,
                    "temperature": 0.3,
                    "max_tokens": 1000
                },
                timeout=30
            )
            if resp.status_code == 200:
                content = resp.json()["choices"][0]["message"]["content"]
                return content.strip()
            else:
                logger.error(f"GLM-4 error {resp.status_code}: {resp.text[:200]}")
                return self._fallback_answer(False)
        except Exception as e:
            logger.error(f"GLM-4 request failed: {e}")
            return self._fallback_answer(False)

    def _generate_with_ollama(self, question: str, contexts: list[str]) -> str:
        # –°—Ç—Ä–æ–≥–∏–π RAG-–ø—Ä–æ–º–ø—Ç –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π
        if contexts:
            context_text = "\n\n".join([f"[{i+1}] {c[:300]}" for i, c in enumerate(contexts)])
            prompt = f"""–û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç ‚Äî —Å–∫–∞–∂–∏ "–í –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞."

        –î–æ–∫—É–º–µ–Ω—Ç—ã:
        {context_text}

        –í–æ–ø—Ä–æ—Å: {question}

        –û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º:"""
            
        model = "qwen2:7b-instruct-q6_K"

        try:
            logger.info(f"Sending to Ollama ({model}): {question[:50]}...")
            resp = requests.post(
                f"{self.ollama_base_url}/api/generate",
                json={
                    "model": model,
                    "prompt": prompt,
                    "stream": False,
                    "options": {"temperature": 0.1}
                },
                timeout=120
            )
            if resp.status_code == 200:
                answer = resp.json().get("response", "").strip()
                # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
                if answer.startswith("–û—Ç–≤–µ—Ç:") or answer.startswith("Answer:"):
                    answer = answer.split(":", 1)[-1].strip()
                return answer
            else:
                logger.error(f"Ollama error {resp.status_code}: {resp.text[:200]}")
                return self._fallback_answer(len(contexts) > 0)
        except Exception as e:
            logger.error(f"Ollama request failed: {e}")
            return self._fallback_answer(len(contexts) > 0)

    def _fallback_answer(self, is_doc_mode: bool) -> str:
        if is_doc_mode:
            return "–í –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É."
        else:
            return "–ú—è—É? –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å –µ—â—ë —Ä–∞–∑!"