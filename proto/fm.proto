syntax = "proto3";
package fm;
option go_package = "/proto;proto";

message SetModeRequest {
  string mode = 1; // "online" or "offline"
}

message SetModeResponse {
  string status = 1;
}

message UploadDocRequest {
  string user_id = 1;
  string title = 2;
  string text = 3;
  bytes file_bytes = 4;
  string filename = 5;
}

message UploadDocResponse {
  string doc_id = 1;
  string status = 2;
}

message ListDocsRequest {
  string user_id = 1;
}

message ListDocsResponse {
  repeated string titles = 1;
}

message ClearDocsRequest {
  string user_id = 1;
}

message ClearDocsResponse {
  bool success = 1;
}

message QueryRequest {
  string user_id = 1;
  string question = 2;
  int32 top_k = 3; // сколько контекстных чанков вернуть
}

message Chunk {
  string chunk_id = 1;
  string text = 2;
  float score = 3;
}

message QueryResponse {
  string answer = 1;           // опционально
  repeated Chunk contexts = 2; // top-k контекстов
}

service QnA {
  rpc SetMode(SetModeRequest) returns (SetModeResponse);
  rpc UploadDocument(UploadDocRequest) returns (UploadDocResponse);
  rpc ListDocuments(ListDocsRequest) returns (ListDocsResponse);
  rpc ClearDocuments(ClearDocsRequest) returns (ClearDocsResponse);
  rpc Query(QueryRequest) returns (QueryResponse);
  rpc DirectQuery(QueryRequest) returns (QueryResponse);
}
